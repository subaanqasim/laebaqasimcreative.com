---
import logo from "@assets/lqc-logo.svg";
import { Image } from "astro:assets";

import { env } from "@lib/env";
import { Container } from "@components/ui";

import { MobileNavDialog } from "./mobile-nav-dialog";
import ThemeToggle from "./theme-toggle.astro";

const navigation = [
  { name: "Benefits", href: "/#benefits" },
  { name: "Recent Work", href: "/#recent-work" },
  { name: "Pricing", href: "/#pricing" },
  { name: "FAQ", href: "/#faq" },
  { name: "Portfolio", href: "/portfolio" },
];
---

<nav
  aria-label="Global"
  class="fixed left-0 right-0 top-0 z-50 flex h-16 w-full border-b border-transparent bg-transparent backdrop-blur transition-all duration-300"
>
  <Container className="flex items-center grow">
    <div class="flex flex-1">
      <a href="/#home" class="-m-1.5 p-1.5">
        <span class="sr-only">Laeba Qasim Creative</span>
        <Image
          class="h-[34px] w-auto"
          src={logo}
          format="svg"
          width={32}
          alt=""
          loading="eager"
        />
      </a>
    </div>

    <div class="lg:hidden">
      <ThemeToggle />
    </div>

    <div class="flex lg:hidden">
      <MobileNavDialog client:load navigation={navigation} />
    </div>

    <div class="hidden lg:flex lg:gap-x-12">
      {
        navigation.map((item) => (
          <a
            href={item.href}
            class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100"
          >
            {item.name}
          </a>
        ))
      }
    </div>

    <div class="hidden items-center lg:flex lg:flex-1 lg:justify-end">
      <div class="mr-2 hidden lg:block">
        <ThemeToggle />
      </div>

      <a
        href={env.PUBLIC_PORTAL_URL}
        class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100"
      >
        Log in <span aria-hidden="true">&rarr;</span>
      </a>
    </div>
  </Container>
</nav>

<script>
  import { inView } from "motion";

  const navbar = document.querySelector("nav");
  const heroSection = document.getElementById("hero");

  const base = ["border-transparent", "bg-transparent"];
  const styles = [
    "border-black/5",
    "dark:border-white/5",
    "bg-gray-50/60",
    "dark:bg-gray-950/60",
  ];

  if (navbar && heroSection) {
    if (window.scrollY > 80) {
      navbar.classList.remove(...base);
      navbar.classList.add(...styles);
    }

    inView(
      heroSection,
      () => {
        navbar.classList.remove(...base);
        navbar.classList.add(...styles);

        return () => {
          if (window.scrollY > 80) {
            return;
          } else {
            navbar.classList.remove(...styles);
            navbar.classList.add(...base);
          }
        };
      },
      { margin: `0px 0px -${window.innerHeight - 64}px 0px` },
    );
  }
</script>
